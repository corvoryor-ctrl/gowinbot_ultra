name: Build macOS App

on:
  workflow_dispatch:
    inputs:
      project_dir:
        description: "โฟลเดอร์โปรเจกต์ (ปล่อยว่างถ้าอยู่ root)"
        required: false
        default: ""
      entrypoint:
        description: "ไฟล์ entrypoint เช่น main.py (ปล่อยว่างให้ค้นหาอัตโนมัติ)"
        required: false
        default: ""

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (top 200)
        shell: bash
        run: |
          echo "== git ls-files (top 200) =="
          git ls-files | head -n 200
          echo "== find . (maxdepth 2) =="
          find . -maxdepth 2 -print

      - name: Resolve project dir & entrypoint
        id: resolve
        shell: bash
        run: |
          set -euo pipefail

          # 1) โฟลเดอร์โปรเจกต์
          if [ -n "${{ github.event.inputs.project_dir }}" ]; then
            REL_DIR="${{ github.event.inputs.project_dir }}"
          else
            # auto-detect: โฟลเดอร์ของไฟล์ main.py ถ้ามี
            CAND="$(git ls-files '**/main.py' | head -n1 || true)"
            REL_DIR="${CAND%/main.py}"
            [ -z "$REL_DIR" ] && REL_DIR="."
          fi
          echo "PROJECT_DIR_REL=$REL_DIR" >> "$GITHUB_ENV"
          echo "Project dir => $REL_DIR"
          echo "== ls project dir =="
          find "$REL_DIR" -maxdepth 2 -print

          # 2) ไฟล์ entrypoint
          if [ -n "${{ github.event.inputs.entrypoint }}" ]; then
            EP="${{ github.event.inputs.entrypoint }}"
          else
            # ลองค้นชื่อยอดฮิต
            for name in main.py app.py server.py run.py ai_service.py iq_bootstrap.py; do
              if [ -f "$REL_DIR/$name" ]; then EP="$name"; break; fi
            done
          fi

          if [ -z "${EP:-}" ]; then
            echo "❌ ไม่พบไฟล์ entrypoint (เช่น main.py) ใน $REL_DIR" >&2
            echo "▶ แนะนำ: กรอก entrypoint ตอน Run workflow หรือย้ายไฟล์มาไว้ในโฟลเดอร์นี้"
            exit 1
          fi

          echo "ENTRYPOINT=$EP" >> "$GITHUB_ENV"
          echo "Entrypoint => $EP"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then
            echo "Using requirements.txt"
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install -r requirements.txt
          else
            echo "No requirements.txt, installing defaults"
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install "fastapi>=0.110" "uvicorn[standard]>=0.30" "iqoptionapi>=0.1.6" \
                        "pandas-ta>=0.3.14b0" "joblib>=1.3" "python-machineid>=0.9.6" \
                        "PyNaCl>=1.5" "websocket-client>=1.6" "pydantic>=2.0"
          fi
          pip install pyinstaller
          pip freeze | sort | tee ../pip-freeze.txt || true

      - name: Build .app with PyInstaller
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          ICON_FLAG=""
          [ -f app.icns ] && ICON_FLAG="--icon app.icns"

          ADD=""
          for f in index.html market_hours.json actives.json ai_meta.json; do
            [ -e "$f" ] && ADD="$ADD --add-data \"$f:.\""
          done
          for d in models strategies services database; do
            [ -d "$d" ] && ADD="$ADD --add-data \"$d:$d\""
          done

          HIDE="--hidden-import pandas_ta --hidden-import sklearn --hidden-import iqoptionapi"

          echo "== pyinstaller args =="
          echo "ICON_FLAG: $ICON_FLAG"
          echo "ENTRYPOINT: ${{ env.ENTRYPOINT }}"
          echo "ADD: $ADD"
          set -x
          eval pyinstaller --noconfirm --clean \
               --windowed \
               --name bot_app \
               $ICON_FLAG \
               $HIDE \
               $ADD \
               "${{ env.ENTRYPOINT }}"
          set +x
          ls -la dist || true

      - name: Upload app bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bot_app_macos
          path: ${{ env.PROJECT_DIR_REL }}/dist/bot_app.app

      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics
          path: |
            pip-freeze.txt
            ${{ env.PROJECT_DIR_REL }}/build
            ${{ env.PROJECT_DIR_REL }}/dist
