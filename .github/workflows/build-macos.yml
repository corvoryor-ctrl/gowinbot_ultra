name: Build macOS App

on:
  workflow_dispatch:
    inputs:
      project_dir:
        description: "โฟลเดอร์โปรเจกต์ (เว้นว่างถ้าอยู่ root)"
        required: false
        default: ""
      entrypoint:
        description: "ไฟล์เริ่มรัน"
        required: true
        default: "main.py"

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve working directory
        shell: bash
        run: |
          set -euo pipefail
          REL="${{ github.event.inputs.project_dir }}"
          if [ -z "$REL" ]; then REL="."; fi
          echo "PROJECT_DIR_REL=$REL" >> "$GITHUB_ENV"
          echo "Using project dir: $REL"
          find "$REL" -maxdepth 2 -print || true

      - name: Verify entrypoint exists
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          EP="${{ github.event.inputs.entrypoint }}"
          if [ ! -f "$EP" ]; then
            echo "❌ Entry point '$EP' not found in $(pwd)" >&2
            exit 1
          fi
          echo "ENTRYPOINT=$EP" >> "$GITHUB_ENV"
          echo "✅ Found entrypoint: $EP"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install -r requirements.txt
          else
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install "fastapi>=0.110" "uvicorn[standard]>=0.30" "iqoptionapi>=0.1.6" \
                        "pandas-ta>=0.3.14b0" "joblib>=1.3" "python-machineid>=0.9.6" \
                        "PyNaCl>=1.5" "websocket-client>=1.6" "pydantic>=2.0" requests python-dotenv
          fi
          pip install pyinstaller

      - name: Build .app with PyInstaller
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          ICON_FLAG=""
          [ -f app.icns ] && ICON_FLAG="--icon app.icns"

          ADD=""
          for f in index.html market_hours.json actives.json ai_meta.json; do
            [ -e "$f" ] && ADD="$ADD --add-data \"$f:.\""
          done
          for d in models strategies services database; do
            [ -d "$d" ] && ADD="$ADD --add-data \"$d:$d\""
          done

          HIDE="--hidden-import pandas_ta --hidden-import sklearn --hidden-import iqoptionapi"

          set -x
          eval pyinstaller --noconfirm --clean \
               --windowed \
               --name bot_app \
               $ICON_FLAG \
               $HIDE \
               $ADD \
               "${{ env.ENTRYPOINT }}"
          set +x
          ls -la dist || true

      - name: Upload app bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bot_app_macos
          path: ${{ env.PROJECT_DIR_REL }}/dist/bot_app.app
