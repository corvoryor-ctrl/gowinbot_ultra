name: Build macOS App (Debug)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo files (top-level)
        shell: bash
        run: |
          echo "== git ls-files (top 200) =="
          git ls-files | head -n 200
          echo "== find . (maxdepth 2) =="
          find . -maxdepth 2 -print

      # หาโฟลเดอร์ที่มี main.py
      - name: Detect project directory
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          CANDIDATE="$(git ls-files '**/main.py' | head -n1 || true)"
          if [ -z "$CANDIDATE" ]; then
            echo "❌ main.py not found in repo" >&2
            exit 1
          fi
          REL_DIR="${CANDIDATE%/main.py}"
          [ -z "$REL_DIR" ] && REL_DIR="."
          echo "PROJECT_DIR_REL=$REL_DIR" >> "$GITHUB_ENV"
          echo "✅ Detected project dir: $REL_DIR"
          echo "== List project dir =="
          find "$REL_DIR" -maxdepth 2 -print

      - name: Set up Python 3.11 (no cache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Python info
        shell: bash
        run: |
          which python || true
          python -V
          pip -V

      - name: Install dependencies (binary-only where possible)
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then
            echo "✅ Using requirements.txt"
            # ติดตั้งแพ็กเกจหนักแบบ binary-only กัน build fail
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install -r requirements.txt
          else
            echo "⚠️ No requirements.txt, installing a safe default set"
            pip install --only-binary=:all: numpy pandas scikit-learn || true
            pip install "fastapi>=0.110" "uvicorn[standard]>=0.30" "iqoptionapi>=0.1.6" \
                        "pandas-ta>=0.3.14b0" "joblib>=1.3" "python-machineid>=0.9.6" \
                        "PyNaCl>=1.5" "websocket-client>=1.6" "pydantic>=2.0"
          fi
          pip install pyinstaller
          echo "== pip freeze =="
          pip freeze | sort | tee ../pip-freeze.txt

      - name: Build .app with PyInstaller (debug echo)
        shell: bash
        working-directory: ${{ env.PROJECT_DIR_REL }}
        run: |
          set -euo pipefail
          ICON_FLAG=""
          if [ -f app.icns ]; then
            ICON_FLAG="--icon app.icns"
            echo "✅ Found app.icns"
          else
            echo "ℹ️  No app.icns at project root; building without icon"
          fi

          ADD=""
          for f in index.html market_hours.json actives.json ai_meta.json; do
            if [ -e "$f" ]; then
              ADD="$ADD --add-data \"$f:.\""
            fi
          done
          for d in models strategies services database; do
            if [ -d "$d" ]; then
              ADD="$ADD --add-data \"$d:$d\""
            fi
          done

          HIDE="--hidden-import pandas_ta --hidden-import sklearn --hidden-import iqoptionapi"

          echo "== PYINSTALLER FLAGS =="
          echo "ICON_FLAG: $ICON_FLAG"
          echo "ADD: $ADD"
          echo "HIDE: $HIDE"

          set -x
          eval pyinstaller --noconfirm --clean \
               --windowed \
               --name bot_app \
               $ICON_FLAG \
               $HIDE \
               $ADD \
               main.py
          set +x

          echo "== dist listing =="
          ls -la dist || true

      - name: Upload artifact (.app)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bot_app_macos
          path: ${{ env.PROJECT_DIR_REL }}/dist/bot_app.app

      - name: Upload diagnostics (pip freeze & tree)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics
          path: |
            pip-freeze.txt
            ${{ env.PROJECT_DIR_REL }}/build
            ${{ env.PROJECT_DIR_REL }}/dist
